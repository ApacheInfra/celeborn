#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
openapi: 3.0.0
info:
  title: Celeborn Master REST API
  contact:
    email: user@celeborn.apache.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
paths:
  /api/v1/conf:
    get:
      tags:
        - Conf
      operationId: getConf
      description: List the conf setting.
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfResponse'
  /api/v1/conf/dynamic:
    get:
      tags:
        - Conf
      operationId: getDynamicConf
      description: |
        List the dynamic configs.
        The parameter level specifies the config level of dynamic configs. 
        The parameter tenant specifies the tenant id of TENANT or TENANT_USER level.
        The parameter name specifies the user name of TENANT_USER level.
        Meanwhile, either none or all of the parameter tenant and name are specified for TENANT_USER level.
      parameters:
        - name: level
          in: query
          description: the config level of dynamic configs.
          required: false
          schema:
            type: string
        - name: tenant
          in: query
          description: the tenant id of TENANT or TENANT_USER level.
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: the user name of TENANT_USER level.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicConfig'
components:
  schemas:
    Config:
      type: object
      properties:
        name:
          type: string
          description: The name of the configuration.
        value:
          type: string
          description: The value of the configuration.
      required:
        - name
        - value
    ConfResponse:
      type: object
      properties:
        configs:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/Config'

    DynamicConfig:
      type: object
      properties:
        level:
          type: string
          description: the config level of dynamic configs.
          enum:
            - SYSTEM
            - TENANT
            - TENANT_USER
        desc:
          type: string
          description: additional description of the dynamic config, such as tenantId and user identifier.
        configs:
          type: array
          description: the config items.
          default: []
          items:
            $ref: '#/components/schemas/Config'



