/*
 * Flink SQL Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1/1.16
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.celeborn.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.apache.celeborn.client.model.DataType;

/**
 * ResolvedExpression
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ResolvedExpression {
  public static final String SERIALIZED_NAME_OUTPUT_DATA_TYPE = "outputDataType";
  @SerializedName(SERIALIZED_NAME_OUTPUT_DATA_TYPE)
  private DataType outputDataType;

  public static final String SERIALIZED_NAME_RESOLVED_CHILDREN = "resolvedChildren";
  @SerializedName(SERIALIZED_NAME_RESOLVED_CHILDREN)
  private List<ResolvedExpression> resolvedChildren = null;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<Object> children = null;


  public ResolvedExpression outputDataType(DataType outputDataType) {
    
    this.outputDataType = outputDataType;
    return this;
  }

   /**
   * Get outputDataType
   * @return outputDataType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataType getOutputDataType() {
    return outputDataType;
  }


  public void setOutputDataType(DataType outputDataType) {
    this.outputDataType = outputDataType;
  }


  public ResolvedExpression resolvedChildren(List<ResolvedExpression> resolvedChildren) {
    
    this.resolvedChildren = resolvedChildren;
    return this;
  }

  public ResolvedExpression addResolvedChildrenItem(ResolvedExpression resolvedChildrenItem) {
    if (this.resolvedChildren == null) {
      this.resolvedChildren = new ArrayList<ResolvedExpression>();
    }
    this.resolvedChildren.add(resolvedChildrenItem);
    return this;
  }

   /**
   * Get resolvedChildren
   * @return resolvedChildren
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ResolvedExpression> getResolvedChildren() {
    return resolvedChildren;
  }


  public void setResolvedChildren(List<ResolvedExpression> resolvedChildren) {
    this.resolvedChildren = resolvedChildren;
  }


  public ResolvedExpression children(List<Object> children) {
    
    this.children = children;
    return this;
  }

  public ResolvedExpression addChildrenItem(Object childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<Object>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getChildren() {
    return children;
  }


  public void setChildren(List<Object> children) {
    this.children = children;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResolvedExpression resolvedExpression = (ResolvedExpression) o;
    return Objects.equals(this.outputDataType, resolvedExpression.outputDataType) &&
        Objects.equals(this.resolvedChildren, resolvedExpression.resolvedChildren) &&
        Objects.equals(this.children, resolvedExpression.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outputDataType, resolvedChildren, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResolvedExpression {\n");
    sb.append("    outputDataType: ").append(toIndentedString(outputDataType)).append("\n");
    sb.append("    resolvedChildren: ").append(toIndentedString(resolvedChildren)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

