/*
 * Flink SQL Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1/1.16
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.celeborn.client.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.apache.celeborn.client.model.LogicalTypeRoot;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType
 */
@JsonPropertyOrder({
  ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType.JSON_PROPERTY_TYPE,
  ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType.JSON_PROPERTY_NULLABLE,
  ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType.JSON_PROPERTY_LENGTH,
  ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType.JSON_PROPERTY_PRECISION,
  ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType.JSON_PROPERTY_SCALE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType {
  public static final String JSON_PROPERTY_TYPE = "type";
  private LogicalTypeRoot type;

  public static final String JSON_PROPERTY_NULLABLE = "nullable";
  private Boolean nullable;

  public static final String JSON_PROPERTY_LENGTH = "length";
  private Integer length;

  public static final String JSON_PROPERTY_PRECISION = "precision";
  private Integer precision;

  public static final String JSON_PROPERTY_SCALE = "scale";
  private Integer scale;

  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType() { 
  }

  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType type(LogicalTypeRoot type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LogicalTypeRoot getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(LogicalTypeRoot type) {
    this.type = type;
  }


  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType nullable(Boolean nullable) {
    this.nullable = nullable;
    return this;
  }

   /**
   * Get nullable
   * @return nullable
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NULLABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNullable() {
    return nullable;
  }


  @JsonProperty(JSON_PROPERTY_NULLABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNullable(Boolean nullable) {
    this.nullable = nullable;
  }


  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType length(Integer length) {
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLength() {
    return length;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLength(Integer length) {
    this.length = length;
  }


  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType precision(Integer precision) {
    this.precision = precision;
    return this;
  }

   /**
   * Get precision
   * @return precision
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPrecision() {
    return precision;
  }


  @JsonProperty(JSON_PROPERTY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrecision(Integer precision) {
    this.precision = precision;
  }


  public ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType scale(Integer scale) {
    this.scale = scale;
    return this;
  }

   /**
   * Get scale
   * @return scale
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getScale() {
    return scale;
  }


  @JsonProperty(JSON_PROPERTY_SCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScale(Integer scale) {
    this.scale = scale;
  }


  /**
   * Return true if this ResultSet_columns_inner_logicalType_fields_inner_fieldType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType resultSetColumnsInnerLogicalTypeFieldsInnerFieldType = (ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType) o;
    return Objects.equals(this.type, resultSetColumnsInnerLogicalTypeFieldsInnerFieldType.type) &&
        Objects.equals(this.nullable, resultSetColumnsInnerLogicalTypeFieldsInnerFieldType.nullable) &&
        Objects.equals(this.length, resultSetColumnsInnerLogicalTypeFieldsInnerFieldType.length) &&
        Objects.equals(this.precision, resultSetColumnsInnerLogicalTypeFieldsInnerFieldType.precision) &&
        Objects.equals(this.scale, resultSetColumnsInnerLogicalTypeFieldsInnerFieldType.scale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, nullable, length, precision, scale);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultSetColumnsInnerLogicalTypeFieldsInnerFieldType {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    nullable: ").append(toIndentedString(nullable)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    precision: ").append(toIndentedString(precision)).append("\n");
    sb.append("    scale: ").append(toIndentedString(scale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `type` to the URL query string
    if (getType() != null) {
      joiner.add(String.format("%stype%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `nullable` to the URL query string
    if (getNullable() != null) {
      joiner.add(String.format("%snullable%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getNullable()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `length` to the URL query string
    if (getLength() != null) {
      joiner.add(String.format("%slength%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLength()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `precision` to the URL query string
    if (getPrecision() != null) {
      joiner.add(String.format("%sprecision%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPrecision()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `scale` to the URL query string
    if (getScale() != null) {
      joiner.add(String.format("%sscale%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getScale()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

