/*
 * Flink SQL Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1/1.16
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.celeborn.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.File;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.apache.celeborn.client.JSON;


/**
 * SerializedThrowable
 */
@JsonPropertyOrder({
  SerializedThrowable.JSON_PROPERTY_SERIALIZED_THROWABLE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SerializedThrowable {
  public static final String JSON_PROPERTY_SERIALIZED_THROWABLE = "serialized-throwable";
  private File serializedThrowable;


  public SerializedThrowable serializedThrowable(File serializedThrowable) {
    this.serializedThrowable = serializedThrowable;
    return this;
  }

   /**
   * Get serializedThrowable
   * @return serializedThrowable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SERIALIZED_THROWABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public File getSerializedThrowable() {
    return serializedThrowable;
  }


  public void setSerializedThrowable(File serializedThrowable) {
    this.serializedThrowable = serializedThrowable;
  }


  /**
   * Return true if this SerializedThrowable object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SerializedThrowable serializedThrowable = (SerializedThrowable) o;
    return Objects.equals(this.serializedThrowable, serializedThrowable.serializedThrowable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serializedThrowable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SerializedThrowable {\n");
    sb.append("    serializedThrowable: ").append(toIndentedString(serializedThrowable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

