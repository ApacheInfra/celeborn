/*
 * Flink SQL Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1/1.16
 * Contact: user@flink.apache.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.apache.celeborn.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ExecuteStatementRequestBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExecuteStatementRequestBody {
  public static final String SERIALIZED_NAME_STATEMENT = "statement";
  @SerializedName(SERIALIZED_NAME_STATEMENT)
  private String statement;

  public static final String SERIALIZED_NAME_EXECUTION_TIMEOUT = "executionTimeout";
  @SerializedName(SERIALIZED_NAME_EXECUTION_TIMEOUT)
  private Long executionTimeout;

  public static final String SERIALIZED_NAME_EXECUTION_CONFIG = "executionConfig";
  @SerializedName(SERIALIZED_NAME_EXECUTION_CONFIG)
  private Map<String, String> executionConfig = null;


  public ExecuteStatementRequestBody statement(String statement) {
    
    this.statement = statement;
    return this;
  }

   /**
   * Get statement
   * @return statement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatement() {
    return statement;
  }


  public void setStatement(String statement) {
    this.statement = statement;
  }


  public ExecuteStatementRequestBody executionTimeout(Long executionTimeout) {
    
    this.executionTimeout = executionTimeout;
    return this;
  }

   /**
   * Get executionTimeout
   * @return executionTimeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getExecutionTimeout() {
    return executionTimeout;
  }


  public void setExecutionTimeout(Long executionTimeout) {
    this.executionTimeout = executionTimeout;
  }


  public ExecuteStatementRequestBody executionConfig(Map<String, String> executionConfig) {
    
    this.executionConfig = executionConfig;
    return this;
  }

  public ExecuteStatementRequestBody putExecutionConfigItem(String key, String executionConfigItem) {
    if (this.executionConfig == null) {
      this.executionConfig = new HashMap<String, String>();
    }
    this.executionConfig.put(key, executionConfigItem);
    return this;
  }

   /**
   * Get executionConfig
   * @return executionConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getExecutionConfig() {
    return executionConfig;
  }


  public void setExecutionConfig(Map<String, String> executionConfig) {
    this.executionConfig = executionConfig;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecuteStatementRequestBody executeStatementRequestBody = (ExecuteStatementRequestBody) o;
    return Objects.equals(this.statement, executeStatementRequestBody.statement) &&
        Objects.equals(this.executionTimeout, executeStatementRequestBody.executionTimeout) &&
        Objects.equals(this.executionConfig, executeStatementRequestBody.executionConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statement, executionTimeout, executionConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecuteStatementRequestBody {\n");
    sb.append("    statement: ").append(toIndentedString(statement)).append("\n");
    sb.append("    executionTimeout: ").append(toIndentedString(executionTimeout)).append("\n");
    sb.append("    executionConfig: ").append(toIndentedString(executionConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

