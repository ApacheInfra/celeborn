#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default values for celeborn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- String to override the default generated name
nameOverride: ""

# -- String to override the default generated fullname
fullnameOverride: ""

# Specifies the Celeborn image to use
image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: apache/celeborn
  # -- Image tag, default is chart `appVersion`
  tag: ""
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secrets for private image registry
  pullSecrets: []
  # - name: secret-name

master:
  # -- Number of Celeborn master replicas to deploy, should not less than 3
  replicas: 3

  # -- Annotations for Celeborn master pods
  annotations: {}
    # key1: value1
    # key2: value2

  # Currently supported volume types are `emptyDir` and `hostPath`.
  # Note that `hostPath` only works in hostPath type using to set `volumes hostPath path`.
  # Celeborn Master will pick first volumes for store raft log.
  # `diskType` only works in Celeborn Worker with hostPath type to manifest local disk type.
  # -- Specifies volumes for Celeborn master pods
  volumes:
  - mountPath: /mnt/celeborn_ratis
    hostPath: /mnt/celeborn_ratis
    type: hostPath
    capacity: 100Gi

  # -- Node selector for Celeborn master pods
  nodeSelector: {}
    # key1: value1
    # key2: value2

  # -- Affinity for Celeborn master pods
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - celeborn
          - key: app.kubernetes.io/role
            operator: In
            values:
            - master
        topologyKey: kubernetes.io/hostname

  # -- Node selector for Celeborn master pods
  tolerations: []
  # - key: key1
  #   operator: Equal
  #   value: value1
  #   effect: NoSchedule
  # - key: key2
  #   operator: Exists
  #   effect: NoSchedule

  # Priority class for Celeborn master pods
  priorityClass:
    # -- Specifies whether to create a new priority class for Celeborn master pods
    create: false
    # -- Specifies the name of priority class for Celeborn master pods to be used (created if `create: true`).
    # Empty means `${Release.Name}-master-priority-class`.
    name: ""
    # -- Specifies the integer value of this priority class, default is half of system-cluster-critical
    value: 1000000000

  # -- Specifies the DNS policy for Celeborn master pods
  dnsPolicy: ClusterFirst

  # -- Specifies whether to use the host's network namespace for Celeborn master pods
  hostNetwork: false

  # -- Specifies security context for Celeborn master pods
  podSecurityContext:
    # Specifies the UID to run the entrypoint of the container process
    runAsUser: 10006
    # Specifies the GID to run the entrypoint of the container process
    runAsGroup: 10006
    # Specifies the GID to use when modifying ownership and permissions of the mounted volumes
    fsGroup: 10006

  # -- Specifies environment variables for Celeborn master containers
  env:
  - name: CELEBORN_MASTER_MEMORY
    value: 2g
  - name: CELEBORN_MASTER_JAVA_OPTS
    value: >
      -XX:-PrintGC
      -XX:+PrintGCDetails
      -XX:+PrintGCTimeStamps
      -XX:+PrintGCDateStamps
      -Xloggc:gc-master.out
      -Dio.netty.leakDetectionLevel=advanced
  - name: CELEBORN_NO_DAEMONIZE
    value: "1"
  - name: TZ
    value: Asia/Shanghai

  # -- Specifies environment variable sources for Celeborn master containers
  envFrom: []
  # - configMapRef:
  #     name: celeborn-configmap
  #     optional: false
  # - secretRef:
  #     name: celeborn-secret
  #     optional: false

  # -- Resources for Celeborn master pods
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

  service:
    # -- Specifies service type for Celeborn master service
    type: ClusterIP
    # -- Specifies service port for Celeborn master service
    port: 9097

  podMonitor:
    # -- Specifies whether to create pod monitor for Celeborn master pods
    enable: true
    # -- Specifies pod metrics endpoint for Celeborn master pods
    podMetricsEndpoint:
      # Specifies scheme
      scheme: http
      # Specifies scrape interval
      interval: 5s
      # Specifies port name
      portName: metrics

worker:
  # -- Specifies the number of Celeborn worker replicas to deploy, should less than node number
  replicas: 5

  # -- Annotations for Celeborn worker pods
  annotations: {}
    # key1: value1
    # key2: value2

  # Currently supported volume types are `emptyDir` and `hostPath`.
  # Note that `hostPath` only works in hostPath type using to set `volumes hostPath path`.
  # `diskType` only works in Celeborn Worker with hostPath type to manifest local disk type.
  # -- Specifies volumes for Celeborn worker pods
  volumes:
  - mountPath: /mnt/disk1
    hostPath: /mnt/disk1
    type: hostPath
    diskType: SSD
    capacity: 100Gi
  - mountPath: /mnt/disk2
    hostPath: /mnt/disk2
    type: hostPath
    diskType: SSD
    capacity: 100Gi
  - mountPath: /mnt/disk3
    hostPath: /mnt/disk3
    type: hostPath
    diskType: SSD
    capacity: 100Gi
  - mountPath: /mnt/disk4
    hostPath: /mnt/disk4
    type: hostPath
    diskType: SSD
    capacity: 100Gi

  # -- Node selector for Celeborn worker pods
  nodeSelector: {}
    # key1: value1
    # key2: value2

  # -- Affinity for Celeborn worker pods
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - celeborn
          - key: app.kubernetes.io/role
            operator: In
            values:
            - worker
        topologyKey: kubernetes.io/hostname

  # -- Node selector for Celeborn worker pods
  tolerations: []
  # - key: key1
  #   operator: Equal
  #   value: value1
  #   effect: NoSchedule
  # - key: key2
  #   operator: Exists
  #   effect: NoSchedule

  # Priority class for Celeborn worker pods
  priorityClass:
    # -- Specifies whether to create a new priority class for Celeborn worker pods
    create: false
    # -- Specifies the name of priority class for Celeborn worker pods to be used (created if `create: true`)
    # Empty means `${Release.Name}-worker-priority-class`.
    name: ""
    # -- Specifies the integer value of this priority class, default is Celeborn master value minus 1000
    value: 999999000

  # -- Specifies the DNS policy for Celeborn worker pods
  dnsPolicy: ClusterFirst

  # -- Specifies whether to use the host's network namespace for Celeborn worker pods
  hostNetwork: false

  # -- Specifies security context for Celeborn worker pods
  podSecurityContext:
    # Specifies the UID to run the entrypoint of the container process
    runAsUser: 10006
    # Specifies the GID to run the entrypoint of the container process
    runAsGroup: 10006
    # Specifies the GID to use when modifying ownership and permissions of the mounted volumes
    fsGroup: 10006

  # -- Specifies environment variables for Celeborn worker containers
  env:
  - name: CELEBORN_WORKER_MEMORY
    value: 2g
  - name: CELEBORN_WORKER_OFFHEAP_MEMORY
    value: 12g
  - name: CELEBORN_WORKER_JAVA_OPTS
    value: >
      -XX:-PrintGC
      -XX:+PrintGCDetails
      -XX:+PrintGCTimeStamps
      -XX:+PrintGCDateStamps
      -Xloggc:gc-worker.out
      -Dio.netty.leakDetectionLevel=advanced
  - name: CELEBORN_NO_DAEMONIZE
    value: "1"
  - name: TZ
    value: Asia/Shanghai

  # -- Specifies environment variable sources for Celeborn worker containers
  envFrom: []
  # - configMapRef:
  #     name: celeborn-configmap
  #     optional: false
  # - secretRef:
  #     name: celeborn-secret
  #     optional: false

  # -- Resources for Celeborn worker pods
  resources: {}
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
  
  service:
    # -- Specifies service type for Celeborn worker service
    type: ClusterIP

  podMonitor:
    # -- Specifies whether to create pod monitor for Celeborn worker pods
    enable: true
    # -- Specifies pod metrics endpoint for Celeborn worker pods
    podMetricsEndpoint:
      # Specifies scheme
      scheme: http
      # Specifies scrape interval
      interval: 5s
      # Specifies port name
      portName: metrics

cluster:
  # -- Specifies Kubernetes cluster name
  name: cluster

# -- Celeborn configurations
celeborn:
  celeborn.master.ha.enabled: true
  celeborn.metrics.enabled: true
  celeborn.metrics.prometheus.path: /metrics/prometheus
  celeborn.master.http.port: 9098
  celeborn.worker.http.port: 9096
  celeborn.worker.monitor.disk.enabled: false
  celeborn.shuffle.chunk.size: 8m
  celeborn.rpc.io.serverThreads: 64
  celeborn.rpc.io.numConnectionsPerPeer: 2
  celeborn.rpc.io.clientThreads: 64
  celeborn.rpc.dispatcher.numThreads: 4
  celeborn.worker.flusher.buffer.size: 256K
  celeborn.worker.fetch.io.threads: 32
  celeborn.worker.push.io.threads: 32
  celeborn.push.stageEnd.timeout: 120s
  celeborn.application.heartbeat.timeout: 120s
  celeborn.worker.heartbeat.timeout: 120s
