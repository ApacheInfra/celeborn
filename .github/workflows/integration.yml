#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Integration Test

on:
  push:
    branches:
      - main
      - branch-*
  pull_request:
    branches:
      - main
      - branch-*
env:
  MINIKUBE_VERSION: v1.30.1
  KUBERNETES_VERSION: v1.26.1

jobs:
  celeborn_integration_test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        name: Setup JDK with Maven
        with:
          distribution: zulu
          java-version: 8
          cache: maven
          check-latest: false
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.10.0
      - name: Install kubectl
        shell: bash
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -sSL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/kubectl
          kubectl version --client=true
      # conntrack is required for kubernetes 1.18 and higher
      # socat is required for kubectl port forward which is used in some tests such as validateHelmTillerAddon
      # cri-dockerd is required for Kubernetes 1.24 and higher for none driver
      - name: Install tools for none
        shell: bash
        run: |
          sudo apt-get update -qq
          sudo apt-get -qq -y install conntrack
          sudo apt-get -qq -y install socat jq
          CRI_DOCKERD_VERSION="v0.3.2"
          CRI_DOCKERD_COMMIT="23513f4cfe8f02bc02130b4edba2c9d2c8fd320b"
          CRI_DOCKERD_BASE_URL="https://storage.googleapis.com/kicbase-artifacts/cri-dockerd/${CRI_DOCKERD_COMMIT}"
          sudo curl -L "${CRI_DOCKERD_BASE_URL}/amd64/cri-dockerd" -o /usr/bin/cri-dockerd
          sudo curl -L "${CRI_DOCKERD_BASE_URL}/cri-docker.socket" -o /usr/lib/systemd/system/cri-docker.socket
          sudo curl -L "${CRI_DOCKERD_BASE_URL}/cri-docker.service" -o /usr/lib/systemd/system/cri-docker.service
          sudo chmod +x /usr/bin/cri-dockerd
          CRICTL_VERSION="v1.17.0"
          curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/$CRICTL_VERSION/crictl-${CRICTL_VERSION}-linux-amd64.tar.gz --output crictl-${CRICTL_VERSION}-linux-amd64.tar.gz
          sudo tar zxvf crictl-$CRICTL_VERSION-linux-amd64.tar.gz -C /usr/local/bin
          sudo mkdir -p /etc/cni/net.d/
          sudo chmod 755 /etc/cni /etc/cni/net.d
      - name: Setup Minikube
        run: |
          # https://minikube.sigs.k8s.io/docs/start/
          curl -LO https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start --cpus 2 --memory 4096 --driver=none --kubernetes-version=${KUBERNETES_VERSION} --force
      - name: Build Celeborn Binary
        run:
          ./build/make-distribution.sh -Pspark-3.3 -Pgoogle-mirror
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Celeborn Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./dist
          file: ./docker/Dockerfile
          load: true
          tags: apache/celeborn:latest
      - name: Deploy Celeborn
        run: |
          # https://minikube.sigs.k8s.io/docs/handbook/pushing/#7-loading-directly-to-in-cluster-container-runtime
          minikube image load apache/celeborn:latest
          helm install celeborn charts/celeborn -f ./tests/kubernetes-it/docker/helm/values.yaml
      - run: |
          kubectl get nodes -o json | jq '.items[0].metadata.name' | xargs kubectl describe nodes
          sleep 180
          kubectl get nodes -o json | jq '.items[0].metadata.name' | xargs -I {} kubectl taint nodes {} node.kubernetes.io/not-ready:NoSchedule-
          kubectl get pods -o wide
          kubectl get pods -o yaml
          kubectl get pods celeborn-master-0 -o yaml | grep podIP | grep -Eo "([0-9]{1,3}[\.]){3}[0-9]{1,3}" | xargs ping -c 10
      - name: Wait Celeborn Ready
        run: >-
          ./build/mvn clean install 
          -Pkubernetes-it 
          -Pspark-3.3
          -Dtest=none 
          -DwildcardSuites=org.apache.celeborn.integration.DeploySuite
